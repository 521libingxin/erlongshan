/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../app/setup/settings-menu.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/router/src/router';
import * as import9 from '@angular/router/src/router_state';
import * as import10 from '../../../app/service/navigation.service';
import * as import11 from '../../../app/service/menus.service';
import * as import12 from '@angular/core/src/linker/view_container';
import * as import13 from '../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import14 from '@angular/core/src/linker/template_ref';
import * as import15 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import16 from '@angular/common/src/directives/ng_for';
import * as import17 from '../../../app/service/setting-button.component';
import * as import18 from '../service/setting-button.component.ngfactory';
export var Wrapper_SettingsMenuComponent = (function () {
    function Wrapper_SettingsMenuComponent(p0, p1, p2, p3) {
        this._changed = false;
        this.context = new import0.SettingsMenuComponent(p0, p1, p2, p3);
    }
    Wrapper_SettingsMenuComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_SettingsMenuComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_SettingsMenuComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_SettingsMenuComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_SettingsMenuComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_SettingsMenuComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_SettingsMenuComponent;
}());
var renderType_SettingsMenuComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_SettingsMenuComponent_Host0 = (function (_super) {
    __extends(View_SettingsMenuComponent_Host0, _super);
    function View_SettingsMenuComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_SettingsMenuComponent_Host0, renderType_SettingsMenuComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    View_SettingsMenuComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'settings-menu', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_SettingsMenuComponent0(this.viewUtils, this, 0, this._el_0);
        this._SettingsMenuComponent_0_3 = new Wrapper_SettingsMenuComponent(this.injectorGet(import8.Router, this.parentIndex), this.injectorGet(import9.ActivatedRoute, this.parentIndex), this.injectorGet(import10.NavService, this.parentIndex), this.injectorGet(import11.menuService, this.parentIndex));
        this.compView_0.create(this._SettingsMenuComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._SettingsMenuComponent_0_3.context);
    };
    View_SettingsMenuComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.SettingsMenuComponent) && (0 === requestNodeIndex))) {
            return this._SettingsMenuComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_SettingsMenuComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._SettingsMenuComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_SettingsMenuComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_SettingsMenuComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_SettingsMenuComponent_Host0;
}(import1.AppView));
export var SettingsMenuComponentNgFactory = new import7.ComponentFactory('settings-menu', View_SettingsMenuComponent_Host0, import0.SettingsMenuComponent);
var styles_SettingsMenuComponent = [];
var renderType_SettingsMenuComponent = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, styles_SettingsMenuComponent, {});
export var View_SettingsMenuComponent0 = (function (_super) {
    __extends(View_SettingsMenuComponent0, _super);
    function View_SettingsMenuComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_SettingsMenuComponent0, renderType_SettingsMenuComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    View_SettingsMenuComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n        ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'ul', new import3.InlineArray2(2, 'class', 'setting_right_ul'), null);
        this._text_2 = this.renderer.createText(this._el_1, '\n           ', null);
        this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1, null);
        this._vc_3 = new import12.ViewContainer(3, 1, this, this._anchor_3);
        this._TemplateRef_3_5 = new import14.TemplateRef_(this, 3, this._anchor_3);
        this._NgFor_3_6 = new import13.Wrapper_NgFor(this._vc_3.vcRef, this._TemplateRef_3_5, this.parentView.injectorGet(import15.IterableDiffers, this.parentIndex), this.ref);
        this._text_4 = this.renderer.createText(this._el_1, '\n        ', null);
        this._text_5 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._anchor_3,
            this._text_4,
            this._text_5
        ]), null);
        return null;
    };
    View_SettingsMenuComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import14.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import16.NgFor) && (3 === requestNodeIndex))) {
            return this._NgFor_3_6.context;
        }
        return notFoundResult;
    };
    View_SettingsMenuComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_3_0_0 = this.context.settings;
        this._NgFor_3_6.check_ngForOf(currVal_3_0_0, throwOnChange, false);
        this._NgFor_3_6.ngDoCheck(this, this._anchor_3, throwOnChange);
        this._vc_3.detectChangesInNestedViews(throwOnChange);
    };
    View_SettingsMenuComponent0.prototype.destroyInternal = function () {
        this._vc_3.destroyNestedViews();
    };
    View_SettingsMenuComponent0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 3)) {
            return new View_SettingsMenuComponent1(this.viewUtils, this, 3, this._anchor_3, this._vc_3);
        }
        return null;
    };
    return View_SettingsMenuComponent0;
}(import1.AppView));
var View_SettingsMenuComponent1 = (function (_super) {
    __extends(View_SettingsMenuComponent1, _super);
    function View_SettingsMenuComponent1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_SettingsMenuComponent1, renderType_SettingsMenuComponent, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_SettingsMenuComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'li', new import3.InlineArray2(2, 'class', 'setting_right_li'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n                ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'nav-icon-button', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_2 = new import18.View_SettingsButtonComponent0(this.viewUtils, this, 2, this._el_2);
        this._SettingsButtonComponent_2_3 = new import18.Wrapper_SettingsButtonComponent();
        this.compView_2.create(this._SettingsButtonComponent_2_3.context);
        this._text_3 = this.renderer.createText(this._el_0, '\n            ', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_2, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_2));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3
        ]), [disposable_0]);
        return null;
    };
    View_SettingsMenuComponent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import17.SettingsButtonComponent) && (2 === requestNodeIndex))) {
            return this._SettingsButtonComponent_2_3.context;
        }
        return notFoundResult;
    };
    View_SettingsMenuComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2_0_0 = this.context.$implicit;
        this._SettingsButtonComponent_2_3.check_button(currVal_2_0_0, throwOnChange, false);
        this._SettingsButtonComponent_2_3.ngDoCheck(this, this._el_2, throwOnChange);
        this.compView_2.internalDetectChanges(throwOnChange);
    };
    View_SettingsMenuComponent1.prototype.destroyInternal = function () {
        this.compView_2.destroy();
    };
    View_SettingsMenuComponent1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_SettingsMenuComponent1.prototype.handleEvent_2 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.parentView.context.go(this.context.$implicit.destination) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_SettingsMenuComponent1;
}(import1.AppView));
//# sourceMappingURL=settings-menu.component.ngfactory.js.map