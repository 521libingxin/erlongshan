/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '../../../app/setup/setup.module';
import * as import2 from '@angular/router/src/router_module';
import * as import3 from '../../../app/setup/setup-routing.module';
import * as import4 from '@angular/common/src/common_module';
import * as import5 from '../../../app/shared/shared.module';
import * as import6 from '@angular/common/src/localization';
import * as import7 from '@angular/core/src/di/injector';
import * as import8 from './setup.component.ngfactory';
import * as import9 from './settings-menu.component.ngfactory';
import * as import10 from './wizardsMenu/wizards.component.ngfactory';
import * as import11 from './abc.ngfactory';
import * as import12 from '../../../app/setup/setup.component';
import * as import13 from '../../../app/setup/settings-menu.component';
import * as import14 from '../../../app/setup/wizardsMenu/wizards.component';
import * as import15 from '../../../app/setup/abc';
import * as import16 from '@angular/core/src/i18n/tokens';
import * as import17 from '@angular/router/src/router_config_loader';
class SetupInjector extends import0.NgModuleInjector<import1.Setup> {
  _RouterModule_0:import2.RouterModule;
  _SetupRoutingModule_1:import3.SetupRoutingModule;
  _CommonModule_2:import4.CommonModule;
  _SharedModule_3:import5.SharedModule;
  _Setup_4:import1.Setup;
  __ROUTES_5:any[];
  __NgLocalization_6:import6.NgLocaleLocalization;
  constructor(parent:import7.Injector) {
    super(parent,[
      import8.SetupComponentNgFactory,
      import9.SettingsMenuComponentNgFactory,
      import10.WizardsComponentNgFactory,
      import11.TjjComponentNgFactory
    ]
    ,([] as any[]));
  }
  get _ROUTES_5():any[] {
      if ((this.__ROUTES_5 == null)) { (this.__ROUTES_5 = [[
        {
          path: 'wizardsMenu',
          component: import12.SetupComponent,
            children: [{
              path: '',
              component: import13.SettingsMenuComponent
            }
          ]
        }
        ,
        {
          path: 'wizardsMenus',
          component: import14.WizardsComponent,
            children: [{
              path: 'upgradewizard',
              component: import15.TjjComponent
            }
          ]
        }
        ,
        {
          path: 'settingsMenu',
          component: import12.SetupComponent,
          children: [
            {
              path: '',
              component: import13.SettingsMenuComponent
            }
            ,
            {
              path: 'linemovement',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'printtrigger',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'poweroptions',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'positionorientation',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'content',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'properties',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'clocksdates',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'printheadmanualmode',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'inksystemmanualmode',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'inkdetails',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'hardware',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'gutter',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'installoptions',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'status',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'logs',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'qualityproblems',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'jetprofile',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'tests',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'modulation',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'pressurelogs',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'testprint',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'installation',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'inspection',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'configueralerts',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'rangedalerts',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'emailalerts',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'servicealerts',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'setup',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'assignment',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'monitor',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'test',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'labelselect',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'ethernet',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'serial',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'advanced',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'languagekeyboard',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'datetime',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'backup',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'restore',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'defaults',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'upgrade',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'upgradeconfigur',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'overview',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'softwareversions',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'printerconnection',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'languageandkey',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'accessibility',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'diagnostics',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'network',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'versioninformation',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'logoeditor',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'installpacks',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'migratepacks',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'consumables',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'counters',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'statistics',
              component: import15.TjjComponent
            }
            ,
            {
              path: 'inspectionp',
              component: import15.TjjComponent
            }

          ]

        }

      ]
    ]); }
    return this.__ROUTES_5;
  }
  get _NgLocalization_6():import6.NgLocaleLocalization {
    if ((this.__NgLocalization_6 == null)) { (this.__NgLocalization_6 = new import6.NgLocaleLocalization(this.parent.get(import16.LOCALE_ID))); }
    return this.__NgLocalization_6;
  }
  createInternal():import1.Setup {
    this._RouterModule_0 = new import2.RouterModule(this.parent.get(import2.ROUTER_FORROOT_GUARD,(null as any)));
    this._SetupRoutingModule_1 = new import3.SetupRoutingModule();
    this._CommonModule_2 = new import4.CommonModule();
    this._SharedModule_3 = new import5.SharedModule();
    this._Setup_4 = new import1.Setup();
    return this._Setup_4;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.RouterModule)) { return this._RouterModule_0; }
    if ((token === import3.SetupRoutingModule)) { return this._SetupRoutingModule_1; }
    if ((token === import4.CommonModule)) { return this._CommonModule_2; }
    if ((token === import5.SharedModule)) { return this._SharedModule_3; }
    if ((token === import1.Setup)) { return this._Setup_4; }
    if ((token === import17.ROUTES)) { return this._ROUTES_5; }
    if ((token === import6.NgLocalization)) { return this._NgLocalization_6; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const SetupNgFactory:import0.NgModuleFactory<import1.Setup> = new import0.NgModuleFactory(SetupInjector,import1.Setup);